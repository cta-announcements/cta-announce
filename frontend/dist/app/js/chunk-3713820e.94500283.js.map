{"version":3,"sources":["webpack:///./src/components/Submit/FormSectionText.vue?71d3","webpack:///src/components/Submit/FormSectionText.vue","webpack:///./src/components/Submit/FormSectionText.vue?eebd","webpack:///../../../src/components/VTextarea/VTextarea.ts","webpack:///./src/components/Submit/FormSectionText.vue","webpack:///./src/data/rules.js","webpack:///../../src/util/mergeData.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","_v","proxy","$options","rules","required","text","model","value","callback","$$v","expression","staticRenderFns","components","ctaCard","ctaInputWrapper","computed","get","$store","state","form","set","commit","val","created","baseMixins","mixins","name","props","autoGrow","noResize","rowHeight","type","Number","default","validator","v","isNaN","parseFloat","rows","parseInt","classes","VTextField","noResizeHandle","watch","lazyValue","$nextTick","mounted","setTimeout","methods","calculateInputHeight","input","$refs","height","minHeight","Math","genInput","onInput","onKeyDown","isFocused","e","component","VTextarea","email","test","length","pattern","styleList","styleProp","parseStyle","styleMap","style","s","mergeTarget","i","arguments","Object","mergeClasses","mergeStyles","mergeListeners","prop","target","source"],"mappings":"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","file":"js/chunk-3713820e.94500283.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cta-card',{staticClass:\"mb-8\",attrs:{\"color\":\"blue\"},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_vm._v(\"Message\")]},proxy:true},{key:\"icon\",fn:function(){return [_vm._v(\"mdi-pencil-outline\")]},proxy:true},{key:\"subtitle\",fn:function(){return [_vm._v(\"Write your announcement below. Keep it breif and to the point. \")]},proxy:true}])},[_c('cta-input-wrapper',[_c('v-textarea',{attrs:{\"outlined\":\"\",\"auto-grow\":\"\",\"rules\":[_vm.$options.rules.required, _vm.$options.rules.text],\"counter\":\"500\"},model:{value:(_vm.text),callback:function ($$v) {_vm.text=$$v},expression:\"text\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <cta-card color=\"blue\" class=\"mb-8\">\n    <template #title>Message</template>\n    <template #icon>mdi-pencil-outline</template>\n    <template #subtitle\n      >Write your announcement below. Keep it breif and to the point.\n    </template>\n    <cta-input-wrapper>\n      <v-textarea\n        outlined\n        auto-grow\n        v-model=\"text\"\n        :rules=\"[$options.rules.required, $options.rules.text]\"\n        counter=\"500\"\n      >\n      </v-textarea>\n    </cta-input-wrapper>\n  </cta-card>\n</template>\n\n<script>\nimport rules from '../../data/rules';\n\nexport default {\n  components: {\n    ctaCard: () => import('../Card'),\n    ctaInputWrapper: () => import('./InputWrapper')\n  },\n  computed: {\n    text: {\n      get() {\n        return this.$store.state.form.text;\n      },\n      set(val) {\n        this.$store.commit('form/setText', val);\n      }\n    }\n  },\n  created() {\n    this.$options.rules = rules;\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--19-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormSectionText.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vuetify-loader/lib/loader.js??ref--19-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormSectionText.vue?vue&type=script&lang=js&\"","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./FormSectionText.vue?vue&type=template&id=12f9c96a&\"\nimport script from \"./FormSectionText.vue?vue&type=script&lang=js&\"\nexport * from \"./FormSectionText.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\ninstallComponents(component, {VTextarea})\n","const rules = {\n  required: v => !!v || 'This field is required',\n  email: v =>\n    /@student.tdsb.on.ca|@tdsb.on.ca/.test(v) || 'E-mail must be in TDSB',\n  text: v =>\n    (v && v.length < 500)  || 'Your announcement must be less than 500 characters'\n};\n\nexport default rules;\n","/**\n * @copyright 2017 Alex Regan\n * @license MIT\n * @see https://github.com/alexsasharegan/vue-functional-data-merge\n */\n/* eslint-disable max-statements */\nimport { VNodeData } from 'vue'\nimport { camelize, wrapInArray } from './helpers'\n\nconst pattern = {\n  styleList: /;(?![^(]*\\))/g,\n  styleProp: /:(.*)/,\n} as const\n\nfunction parseStyle (style: string) {\n  const styleMap: Dictionary<any> = {}\n\n  for (const s of style.split(pattern.styleList)) {\n    let [key, val] = s.split(pattern.styleProp)\n    key = key.trim()\n    if (!key) {\n      continue\n    }\n    // May be undefined if the `key: value` pair is incomplete.\n    if (typeof val === 'string') {\n      val = val.trim()\n    }\n    styleMap[camelize(key)] = val\n  }\n\n  return styleMap\n}\n\n/**\n * Intelligently merges data for createElement.\n * Merges arguments left to right, preferring the right argument.\n * Returns new VNodeData object.\n */\nexport default function mergeData (...vNodeData: VNodeData[]): VNodeData\nexport default function mergeData (): VNodeData {\n  const mergeTarget: VNodeData & Dictionary<any> = {}\n  let i: number = arguments.length\n  let prop: string\n\n  // Allow for variadic argument length.\n  while (i--) {\n    // Iterate through the data properties and execute merge strategies\n    // Object.keys eliminates need for hasOwnProperty call\n    for (prop of Object.keys(arguments[i])) {\n      switch (prop) {\n        // Array merge strategy (array concatenation)\n        case 'class':\n        case 'directives':\n          if (arguments[i][prop]) {\n            mergeTarget[prop] = mergeClasses(mergeTarget[prop], arguments[i][prop])\n          }\n          break\n        case 'style':\n          if (arguments[i][prop]) {\n            mergeTarget[prop] = mergeStyles(mergeTarget[prop], arguments[i][prop])\n          }\n          break\n        // Space delimited string concatenation strategy\n        case 'staticClass':\n          if (!arguments[i][prop]) {\n            break\n          }\n          if (mergeTarget[prop] === undefined) {\n            mergeTarget[prop] = ''\n          }\n          if (mergeTarget[prop]) {\n            // Not an empty string, so concatenate\n            mergeTarget[prop] += ' '\n          }\n          mergeTarget[prop] += arguments[i][prop].trim()\n          break\n        // Object, the properties of which to merge via array merge strategy (array concatenation).\n        // Callback merge strategy merges callbacks to the beginning of the array,\n        // so that the last defined callback will be invoked first.\n        // This is done since to mimic how Object.assign merging\n        // uses the last given value to assign.\n        case 'on':\n        case 'nativeOn':\n          if (arguments[i][prop]) {\n            mergeTarget[prop] = mergeListeners(mergeTarget[prop], arguments[i][prop])\n          }\n          break\n        // Object merge strategy\n        case 'attrs':\n        case 'props':\n        case 'domProps':\n        case 'scopedSlots':\n        case 'staticStyle':\n        case 'hook':\n        case 'transition':\n          if (!arguments[i][prop]) {\n            break\n          }\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = {}\n          }\n          mergeTarget[prop] = { ...arguments[i][prop], ...mergeTarget[prop] }\n          break\n        // Reassignment strategy (no merge)\n        default: // slot, key, ref, tag, show, keepAlive\n          if (!mergeTarget[prop]) {\n            mergeTarget[prop] = arguments[i][prop]\n          }\n      }\n    }\n  }\n\n  return mergeTarget\n}\n\nexport function mergeStyles (\n  target: undefined | string | object[] | object,\n  source: undefined | string | object[] | object\n) {\n  if (!target) return source\n  if (!source) return target\n\n  target = wrapInArray(typeof target === 'string' ? parseStyle(target) : target)\n\n  return (target as object[]).concat(typeof source === 'string' ? parseStyle(source) : source)\n}\n\nexport function mergeClasses (target: any, source: any) {\n  if (!source) return target\n  if (!target) return source\n\n  return target ? wrapInArray(target).concat(source) : source\n}\n\nexport function mergeListeners (\n  target: { [key: string]: Function | Function[] } | undefined,\n  source: { [key: string]: Function | Function[] } | undefined\n) {\n  if (!target) return source\n  if (!source) return target\n\n  let event: string\n\n  for (event of Object.keys(source)) {\n    // Concat function to array of functions if callback present.\n    if (target[event]) {\n      // Insert current iteration data in beginning of merged array.\n      target[event] = wrapInArray(target[event])\n      ;(target[event] as Function[]).push(...wrapInArray(source[event]))\n    } else {\n      // Straight assign.\n      target[event] = source[event]\n    }\n  }\n\n  return target\n}\n"],"sourceRoot":""}